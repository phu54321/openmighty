%debug {
  // outline: 1px solid #00bfa5;
  /*! keep */
}

.game {
  @extend %debug;
  position: relative;
  display: block;
  width: 100%;
  height: 100%;

  align-items: center;
  justify-content: space-between;
  flex-flow: column;


  .player {
    @extend %debug;
    display: flex;
    width: 90%;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;

    .player-owner .player-name {
      @extend .blue.lighten-3;
    }

    .player-empty .player-name {
      @extend .grey.lighten-2;
    }

    .player-slot {
      @extend .card;
      width: 18%;
      margin-left: 1%;
      margin-right: 1%;
      padding-top: 4%;

      .player-name {
        @extend .z-depth-1;
        @extend .pink.lighten-2;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        padding: 2%;
        box-sizing: border-box;
        text-align: center;
        text-overflow: ellipsis;
        font-weight: bold;
      }

      .player-card {
        @extend %debug;
        box-sizing: border-box;
        padding: 3%;

        .btn {
          padding: 0;
          height: 2rem;
          line-height: 2rem;
          width: 100%;
        }

        .player-card-bidding:first-letter {
          text-transform: capitalize;
        }

        .player-form {
          .player-form-title {
            display: block;
            font-weight: bold;
            height: 2rem;
          }
          select {
            height: inherit;
            padding: 0.1rem;
            font-size: 0.9rem;
          }

        }
      }

      .player-has {
        @extend .grey.lighten-3;
        height: 2.6em;
        padding: 0.2em;
        z-index: 2;

        %has-slot {
          line-height: 1em;
        }

        .has-spade {
          @extend %has-slot;
          &:before { content: '♠'; }
          color: black;
        }

        .has-clover {
          @extend %has-slot;
          &:before { content: '♣'; }
          color: black;
        }

        .has-heart {
          @extend %has-slot;
          &:before { content: '♥'; }
          color: red;
        }

        .has-diamond {
          @extend %has-slot;
          &:before { content: '♦'; }
          color: red;
        }
      }
    }
  }


  // Deck related
  .deck {
    @extend %debug;
    @extend .z-depth-1;
    @extend .yellow.lighten-2;
    position: absolute;
    width: 50%;
    left: 0;
    right: 0;
    bottom: -10%;
    padding: 2% 2% 0 2%;
    margin-left: auto;
    margin-right: auto;
    text-align: center;

    .deck-card-container {
      display: inline-block;
      width: 16%;
      margin-right: -9.1%;
    }
    // 13 * a - 12 * b = 99
    // 13 * (a - b) + b = 99
    // b = 3, a - b =


    .deck-card-container:last-child {
      margin-right: 0;
    }
  }

  @media all and (max-width: 700px) {
    .deck {
      width: 84%;
    }
  }

  @media all and (max-width: 400px) {
    .deck {
      width: 96%;
    }
  }



}

$shapes: ("s", "c", "d", "h");

.deck-card {
  @extend .z-depth-3;
  background-size: 100% 100%;
  background-repeat: no-repeat;

  transition: transform 0.5s;
}

.deck-card-selected {
  transform: translate(0, -15%);
}


// Game cards

.game-card-container {
  position: relative;
  width: 100%;
  padding-top: 150%;
  background-color: white;
}

.game-card {
  @extend %debug;

  // Fill screen
  position: absolute;
  top: 3%;
  left: 3%;
  right: 3%;
  bottom: 3%;

  // Shadow ui
  transition: transform 0.5s;

  // Image
  background-size: 100% 100%;
  background-repeat: no-repeat;
}

.game-template {
  display: none;
}

@for $j from 1 through 4 {
  @for $i from 2 through 14 {
    .game-card-#{nth($shapes, $j)}#{$i} {
      background-image: url(/images/cards/#{nth($shapes, $j)}#{$i}.png);
    }
  }
}

.game-card-j0 {
  background-image: url(/images/cards/j0.png);
}
